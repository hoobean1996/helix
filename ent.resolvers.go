package helix

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.66

import (
	"context"

	"helix.io/helix/ent"
)

// Node is the resolver for the node field.
func (r *queryResolver) Node(ctx context.Context, id int) (ent.Noder, error) {
	return r.client.Noder(ctx, id)
}

// Nodes is the resolver for the nodes field.
func (r *queryResolver) Nodes(ctx context.Context, ids []int) ([]ent.Noder, error) {
	return r.client.Noders(ctx, ids)
}

// EntEmails is the resolver for the entEmails field.
func (r *queryResolver) EntEmails(ctx context.Context) ([]*ent.EntEmail, error) {
	return r.client.EntEmail.Query().All(ctx)
}

// EntTemporaryEmails is the resolver for the entTemporaryEmails field.
func (r *queryResolver) EntTemporaryEmails(ctx context.Context) ([]*ent.EntTemporaryEmail, error) {
	return r.client.EntTemporaryEmail.Query().All(ctx)
}

// EntUsers is the resolver for the entUsers field.
func (r *queryResolver) EntUsers(ctx context.Context) ([]*ent.EntUser, error) {
	return r.client.EntUser.Query().All(ctx)
}

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
